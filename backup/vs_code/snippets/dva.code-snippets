{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"dva model": {
		"scope": "javascriptreact,typescript",
		"prefix": "dvamodel",
		"body": [
			"import pathToRegexp from 'path-to-regexp';",
			"",
			"export default {",
			"  namespace: '${1:namespace}',",
			"  state: {",
			"  },",
			"  subscriptions: {",
			"    setup({ dispatch, history }) {",
			"      history.listen(({ pathname }) => {",
			"        const match = pathToRegexp('/${1:namespace}').exec(pathname);",
			"        if (match) {",
			"        }",
			"      });",
			"    }",
			"  },",
			"  effects: {",
			"  },",
			"  reducers: {",
			"  }",
			"};",
			"",
		],
		"description": "dva model"
	},

	"dva reducer": {
		"scope": "javascriptreact,typescript",
		"prefix": "dvareducer",
		"body": [
			"${1:name}(state, { payload: ${2:value} }) {",
			"  return {",
			"    ...state,",
			"    ${2:value}",
			"  }",
			"}"
		],
		"description": "dva redurce"
	},

	"dva effect": {
		"scope": "javascriptreact,typescript",
		"prefix": "dvaeffect",
		"body": [
			"* ${1:name}(action, { call, put, select }) {",
			"  $2",
			"}"
		],
		"description": "dva redurce"
	},

	"dav dispatch": {
		"scope": "javascriptreact,typescript",
		"prefix": "dvadispatch",
		"body": [
			"dispatch({ type: '${1:name}', payload: ${2:value} });"
		],
		"description": "dva dispatch"
	}
}
